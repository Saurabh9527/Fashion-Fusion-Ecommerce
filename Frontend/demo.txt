import React, { useState } from 'react';
import axios from 'axios';
import useFetchProducts from '../../hooks/useFetchProducts';
import useSearchProduct from '../../hooks/useSearchProduct';
//* for responsive navbar fields.
const Products = () => {
  const [pageNo, setPageNo] = useState(1);
  const [category, setCategory] = useState('');
  const [searchQuery, setSearchQuery] = useState('');
  const [isOpen, setIsOpen] = useState(false);

  const { products: paginatedProducts, loading: paginatedLoading, error: paginatedError } = useFetchProducts(pageNo, 8, category);
  const { products: searchProducts, loading: searchLoading, error: searchError } = useSearchProduct(searchQuery);

  // Handle category change
  const handleCategoryChange = (newCategory) => {
    setSearchQuery('');
    setCategory(newCategory);
    setPageNo(1);
  };

  // Handle search query change
  const handleSearchChange = (e) => {
    setSearchQuery(e.target.value);
    setCategory('');
    setPageNo(1);
  };

  // Choose the displayed products (either search results or paginated products)
  const displayProducts = searchQuery ? searchProducts : paginatedProducts;

  console.log(displayProducts);

  return (
    <div className="flex flex-col mt-[60px] max-w-[500px] md:max-w-[700px] lg:max-w-[900px] xl:max-w-[1000px] mx-auto border border-zinc-300 rounded">
      <div className="flex justify-between items-center p-2">
        {/* Categories Dropdown for mobile */}
        <div className="md:hidden">
          <button
            className="py-2 px-4 bg-gray-300 rounded-md text-gray-900"
            onClick={() => setIsOpen(!isOpen)}
          >
            {isOpen ? 'Hide Categories' : 'Show Categories'}
          </button>
          <div className={`${isOpen ? 'block' : 'hidden'} transition-all duration-300`}>
            <ul className="flex flex-col items-center space-y-3 cursor-pointer p-2 bg-gray-100 rounded-md">
              <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-300" onClick={() => handleCategoryChange('')}>All Products</li>
              <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-300" onClick={() => handleCategoryChange('Men')}>Men</li>
              <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-300" onClick={() => handleCategoryChange('Women')}>Women</li>
              <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-300" onClick={() => handleCategoryChange('Watches')}>Watches</li>
              <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-300" onClick={() => handleCategoryChange('Shoes')}>Shoes</li>
            </ul>
          </div>
        </div>

        {/* Category List for larger screens */}
        <div className="group hidden md:block">
          <ul className="flex justify-between items-center space-x-3 cursor-pointer">
            <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-300" onClick={() => handleCategoryChange('')}>All Products</li>
            <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-30" onClick={() => handleCategoryChange('Men')}>Men</li>
            <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-30" onClick={() => handleCategoryChange('Women')}>Women</li>
            <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-30" onClick={() => handleCategoryChange('Watches')}>Watches</li>
            <li className="text-gray-700 hover:text-gray-900 hover:border-b-2 hover:border-gray-700 transition-all duration-30" onClick={() => handleCategoryChange('Shoes')}>Shoes</li>
          </ul>
        </div>

        {/* Search input */}
        <input
          type="search"
          placeholder="Search products..."
          className="py-2 px-3 border border-gray-300 shadow-sm hover:shadow-md w-[300px] rounded-md outline-none text-gray-900"
          value={searchQuery}
          onChange={handleSearchChange}
        />
      </div>

      {/* Display products */}
      <div className="p-2">
        {displayProducts && displayProducts.length > 0 ? (
          displayProducts.map((product, index) => (
            <div key={index} className="border p-4 mb-4 rounded">
              <h2>{product.name}</h2>
              <p>{product.description}</p>
            </div>
          ))
        ) : (
          <p>No products found</p>
        )}
      </div>

      {/* Pagination Component */}
      <div className="p-2">
        {/* You can add your pagination component here */}
      </div>
    </div>
  );
};

export default Products;
